{"version":3,"file":"static/js/310.f9e2850a.chunk.js","mappings":"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","sources":["components/MovieList/MovieList.styled.js","components/MovieList/MovieList.jsx","pages/Movies/Movies.styled.js","pages/Movies/Movies.jsx","services/moviesAPI.js"],"sourcesContent":["import styled from '@emotion/styled';\nimport { NavLink } from 'react-router-dom';\n\nexport const MovieListContainer = styled.ul``;\n\nexport const MovieItem = styled.li`\n  :not(:last-of-type) {\n    margin-bottom: 5px;\n  }\n`;\n\nexport const MovieLink = styled(NavLink)`\n  display: block;\n  text-decoration: none;\n  color: #466fd5;\n  transform: translate(0);\n  transition: color 500ms ease-in-out, transform 500ms ease-in-out;\n\n  :hover,\n  :focus {\n    color: #06246f;\n    transform: translate(5px);\n  }\n`;\n","import { MovieListContainer, MovieItem, MovieLink } from './MovieList.styled';\nimport PropTypes from 'prop-types';\n\nexport const MovieList = ({ movies, homepage, location }) => {\n  return (\n    <MovieListContainer>\n      {movies.map(({ id, title }) => (\n        <MovieItem key={id}>\n          {homepage ? (\n            <MovieLink to={`movies/${id}`} state={{ from: location }}>\n              {title}\n            </MovieLink>\n          ) : (\n            <MovieLink to={`${id}`} state={{ from: location }}>\n              {title}\n            </MovieLink>\n          )}\n        </MovieItem>\n      ))}\n    </MovieListContainer>\n  );\n};\n\nMovieList.propTypes = {\n  movies: PropTypes.arrayOf(\n    PropTypes.shape({\n      id: PropTypes.number.isRequired,\n      title: PropTypes.string.isRequired,\n    })\n  ),\n};\n","import styled from '@emotion/styled';\n\nexport const MoviesContainer = styled.main`\n  padding: 20px;\n`;\n\nexport const SearchForm = styled.form`\n  display: flex;\n  justify-content: center;\n  gap: 10px;\n  padding-bottom: 10px;\n`;\n\nexport const SearchInput = styled.input`\n  display: inline-block;\n  width: 100%;\n  padding: 5px 10px;\n  border: 1px solid #eee;\n  border-radius: 5px;\n\n  font: inherit;\n  font-size: 20px;\n  outline: none;\n\n  ::placeholder {\n    font: inherit;\n    font-size: 18px;\n  }\n`;\n\nexport const SubmitButton = styled.button`\n  padding: 10px;\n  border: 0;\n  border-radius: 5px;\n\n  opacity: 0.6;\n  transition: opacity 250ms cubic-bezier(0.4, 0, 0.2, 1);\n  cursor: pointer;\n  outline: none;\n\n  :hover {\n    opacity: 1;\n  }\n`;\n","import { useState, useEffect } from 'react';\nimport { useLocation, useSearchParams } from 'react-router-dom';\nimport toast from 'react-hot-toast';\nimport { Puff } from 'react-loader-spinner';\nimport { fetchMoviesByName } from 'services/moviesAPI';\n\nimport {\n  MoviesContainer,\n  SearchForm,\n  SearchInput,\n  SubmitButton,\n} from './Movies.styled';\nimport { MovieList } from 'components/MovieList/MovieList';\n\nconst Movies = () => {\n  const [movies, setMovies] = useState([]);\n  const [searchParams, setSearchParams] = useSearchParams();\n  const [status, setStatus] = useState(null);\n  const [inputValue, setInputValue] = useState('');\n  const searchQuery = searchParams.get('search');\n  const location = useLocation();\n\n  useEffect(() => {\n    // ignore first loading\n    if (!searchQuery) return;\n\n    setInputValue(searchQuery);\n\n    setStatus('pending');\n    fetchMoviesByName(searchQuery)\n      .then(response => {\n        setMovies(response);\n        setStatus('resolved');\n      })\n      .catch(e => {\n        setStatus('rejected');\n        toast.error(e);\n      });\n  }, [searchQuery]);\n\n  const handleSubmit = e => {\n    e.preventDefault();\n    const { value } = e.target.search;\n    const query = value.trim();\n\n    if (query === '') {\n      setSearchParams({});\n      return;\n    }\n\n    setSearchParams({ search: query });\n  };\n\n  const handleChange = e => {\n    setInputValue(e.target.value);\n  };\n\n  return (\n    <MoviesContainer>\n      <SearchForm autoComplete=\"off\" onSubmit={handleSubmit}>\n        <SearchInput\n          type=\"text\"\n          autoFocus\n          placeholder=\"Search movies\"\n          name=\"search\"\n          value={inputValue}\n          onChange={handleChange}\n        />\n        <SubmitButton type=\"submit\">Search</SubmitButton>\n      </SearchForm>\n\n      {status === 'pending' && <Puff />}\n\n      {movies.length > 0 && (\n        <MovieList movies={movies} homepage={false} location={location} />\n      )}\n    </MoviesContainer>\n  );\n};\n\nexport default Movies;\n","import axios from 'axios';\n\nconst API_KEY = 'fd7e9d42e4eb94adcf7c367528854213';\nconst BASE_URL = 'https://api.themoviedb.org/3/';\n\naxios.defaults.baseURL = 'https://api.themoviedb.org/3/';\n\nexport async function fetchTrendingMovies() {\n  const config = {\n    baseUrl: BASE_URL,\n    params: {\n      api_key: API_KEY,\n    },\n  };\n\n  const response = await axios.get('trending/movie/week', config);\n  return response.data.results;\n}\n\nexport async function fetchMoviesByName(query, currentPage = 1) {\n  const config = {\n    baseUrl: BASE_URL,\n    params: {\n      api_key: API_KEY,\n      page: currentPage,\n      query: query,\n    },\n  };\n\n  const response = await axios.get('search/movie', config);\n  return response.data.results;\n}\n\nexport async function fetchMovieDetailsById(id) {\n  const config = {\n    baseUrl: BASE_URL,\n    params: {\n      api_key: API_KEY,\n    },\n  };\n\n  const response = await axios.get(`movie/${id}`, config);\n  return response.data;\n}\n\nexport async function fetchMovieCreditsById(id) {\n  const config = {\n    baseUrl: BASE_URL,\n    params: {\n      api_key: API_KEY,\n    },\n  };\n\n  const response = await axios.get(`movie/${id}/credits`, config);\n  return response.data.cast;\n}\n\nexport async function fetchMovieReviewsById(id) {\n  const config = {\n    baseUrl: BASE_URL,\n    params: {\n      api_key: API_KEY,\n    },\n  };\n\n  const response = await axios.get(`movie/${id}/reviews`, config);\n  return response.data.results;\n}\n"],"names":["MovieListContainer","styled","MovieItem","MovieLink","NavLink","MovieList","movies","homepage","location","map","id","title","to","state","from","MoviesContainer","SearchForm","SearchInput","SubmitButton","useState","setMovies","useSearchParams","searchParams","setSearchParams","status","setStatus","inputValue","setInputValue","searchQuery","get","useLocation","useEffect","fetchMoviesByName","then","response","catch","e","toast","autoComplete","onSubmit","preventDefault","query","target","search","value","trim","type","autoFocus","placeholder","name","onChange","length","API_KEY","BASE_URL","fetchTrendingMovies","config","baseUrl","params","api_key","axios","data","results","currentPage","page","fetchMovieDetailsById","fetchMovieCreditsById","cast","fetchMovieReviewsById"],"sourceRoot":""}