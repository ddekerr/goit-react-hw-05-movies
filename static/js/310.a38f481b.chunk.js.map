{"version":3,"file":"static/js/310.a38f481b.chunk.js","mappings":"8QAEaA,EAAkBC,EAAAA,EAAAA,KAAH,0CAIfC,EAAaD,EAAAA,EAAAA,KAAH,6GAOVE,EAAcF,EAAAA,EAAAA,MAAH,wQAiBXG,EAAeH,EAAAA,EAAAA,OAAH,uO,iBCyCzB,EAzDe,WACb,OAA4BI,EAAAA,EAAAA,UAAS,IAArC,eAAOC,EAAP,KAAeC,EAAf,KACA,GAAwCC,EAAAA,EAAAA,MAAxC,eAAOC,EAAP,KAAqBC,EAArB,KACA,GAA4BL,EAAAA,EAAAA,UAAS,MAArC,eAAOM,EAAP,KAAeC,EAAf,KACMC,EAAcJ,EAAaK,IAAI,UAC/BC,GAAWC,EAAAA,EAAAA,OAEjBC,EAAAA,EAAAA,YAAU,WAEHJ,IAELD,EAAU,YACVM,EAAAA,EAAAA,IAAkBL,GACfM,MAAK,SAAAC,GACJb,EAAUa,GACVR,EAAU,WACX,IACAS,OAAM,SAAAC,GACLV,EAAU,YACVW,EAAAA,GAAAA,MAAYD,EACb,IACJ,GAAE,CAACT,IAeJ,OACE,UAACb,EAAD,YACE,UAACE,EAAD,CAAYsB,aAAa,MAAMC,SAfd,SAAAH,GACnBA,EAAEI,iBACF,IACMC,EADYL,EAAEM,OAAOC,OAAnBC,MACYC,OAOpBrB,EALc,KAAViB,EAKY,CAAEE,OAAQF,GAJR,CAAC,EAKpB,EAIG,WACE,SAACxB,EAAD,CACE6B,KAAK,OACLC,WAAS,EACTC,YAAY,gBACZC,KAAK,YAEP,SAAC/B,EAAD,CAAc4B,KAAK,SAAnB,uBAGU,YAAXrB,IAAwB,SAAC,KAAD,IAExBL,EAAO8B,OAAS,IACf,SAACC,EAAA,EAAD,CAAW/B,OAAQA,EAAQgC,UAAU,EAAOvB,SAAUA,MAI7D,C","sources":["pages/Movies/Movies.styled.js","pages/Movies/Movies.jsx"],"sourcesContent":["import styled from '@emotion/styled';\n\nexport const MoviesContainer = styled.main`\n  padding: 20px;\n`;\n\nexport const SearchForm = styled.form`\n  display: flex;\n  justify-content: center;\n  gap: 10px;\n  padding-bottom: 10px;\n`;\n\nexport const SearchInput = styled.input`\n  display: inline-block;\n  width: 100%;\n  padding: 5px 10px;\n  border: 1px solid #eee;\n  border-radius: 5px;\n\n  font: inherit;\n  font-size: 20px;\n  outline: none;\n\n  ::placeholder {\n    font: inherit;\n    font-size: 18px;\n  }\n`;\n\nexport const SubmitButton = styled.button`\n  padding: 10px;\n  border: 0;\n  border-radius: 5px;\n\n  opacity: 0.6;\n  transition: opacity 250ms cubic-bezier(0.4, 0, 0.2, 1);\n  cursor: pointer;\n  outline: none;\n\n  :hover {\n    opacity: 1;\n  }\n`;\n","import { useState, useEffect } from 'react';\nimport { useLocation, useSearchParams } from 'react-router-dom';\nimport toast from 'react-hot-toast';\nimport { Puff } from 'react-loader-spinner';\nimport { fetchMoviesByName } from 'services/moviesAPI';\n\nimport {\n  MoviesContainer,\n  SearchForm,\n  SearchInput,\n  SubmitButton,\n} from './Movies.styled';\nimport { MovieList } from 'components/MovieList/MovieList';\n\nconst Movies = () => {\n  const [movies, setMovies] = useState([]);\n  const [searchParams, setSearchParams] = useSearchParams();\n  const [status, setStatus] = useState(null);\n  const searchQuery = searchParams.get('search');\n  const location = useLocation();\n\n  useEffect(() => {\n    // ignore first loading\n    if (!searchQuery) return;\n\n    setStatus('pending');\n    fetchMoviesByName(searchQuery)\n      .then(response => {\n        setMovies(response);\n        setStatus('resolved');\n      })\n      .catch(e => {\n        setStatus('rejected');\n        toast.error(e);\n      });\n  }, [searchQuery]);\n\n  const handleSubmit = e => {\n    e.preventDefault();\n    const { value } = e.target.search;\n    const query = value.trim();\n\n    if (query === '') {\n      setSearchParams({});\n      return;\n    }\n\n    setSearchParams({ search: query });\n  };\n\n  return (\n    <MoviesContainer>\n      <SearchForm autoComplete=\"off\" onSubmit={handleSubmit}>\n        <SearchInput\n          type=\"text\"\n          autoFocus\n          placeholder=\"Search movies\"\n          name=\"search\"\n        />\n        <SubmitButton type=\"submit\">Search</SubmitButton>\n      </SearchForm>\n\n      {status === 'pending' && <Puff />}\n\n      {movies.length > 0 && (\n        <MovieList movies={movies} homepage={false} location={location} />\n      )}\n    </MoviesContainer>\n  );\n};\n\nexport default Movies;\n"],"names":["MoviesContainer","styled","SearchForm","SearchInput","SubmitButton","useState","movies","setMovies","useSearchParams","searchParams","setSearchParams","status","setStatus","searchQuery","get","location","useLocation","useEffect","fetchMoviesByName","then","response","catch","e","toast","autoComplete","onSubmit","preventDefault","query","target","search","value","trim","type","autoFocus","placeholder","name","length","MovieList","homepage"],"sourceRoot":""}