{"version":3,"file":"static/js/304.74d32ea8.chunk.js","mappings":"8MAGaA,EAAqBC,EAAAA,EAAAA,GAAH,sBAElBC,EAAYD,EAAAA,EAAAA,GAAH,+EAMTE,GAAYF,EAAAA,EAAAA,GAAOG,EAAAA,GAAPH,CAAH,4Q,SCRTI,EAAY,SAAC,GAAoC,IAAlCC,EAAiC,EAAjCA,OAAQC,EAAyB,EAAzBA,SAAUC,EAAe,EAAfA,SAC5C,OACE,SAACR,EAAD,UACGM,EAAOG,KAAI,gBAAGC,EAAH,EAAGA,GAAIC,EAAP,EAAOA,MAAP,OACV,SAACT,EAAD,UACGK,GACC,SAACJ,EAAD,CAAWS,GAAE,iBAAYF,GAAMG,MAAO,CAAEC,KAAMN,GAA9C,SACGG,KAGH,SAACR,EAAD,CAAWS,GAAE,UAAKF,GAAMG,MAAO,CAAEC,KAAMN,GAAvC,SACGG,KAPSD,EADN,KAejB,C,4ICnBYK,E,QAAOd,EAAAA,KAAH,0C,mBCoCjB,EA5Ba,WACX,OAA4Be,EAAAA,EAAAA,UAAS,IAArC,eAAOV,EAAP,KAAeW,EAAf,KACA,GAA4BD,EAAAA,EAAAA,UAAS,WAArC,eAAOE,EAAP,KAAeC,EAAf,KACMX,GAAWY,EAAAA,EAAAA,MAcjB,OAZAC,EAAAA,EAAAA,YAAU,YACRC,EAAAA,EAAAA,MACGC,MAAK,SAAAjB,GACJW,EAAUX,GACVa,EAAU,WACX,IACAK,OAAM,SAAAC,GACLN,EAAU,YACVO,EAAAA,GAAAA,MAAYD,EACb,GACJ,GAAE,KAGD,UAACV,EAAD,WACc,YAAXG,IAAwB,SAAC,KAAD,IAExBZ,EAAOqB,OAAS,GAAgB,aAAXT,IACpB,SAACb,EAAA,EAAD,CAAWC,OAAQA,EAAQC,UAAU,EAAMC,SAAUA,MAI5D,C,kMClCKoB,EAAU,mCACVC,EAAW,gCAIV,SAAeP,IAAtB,4CAAO,OAAP,oBAAO,6FACCQ,EAAS,CACbC,QAASF,EACTG,OAAQ,CACNC,QAASL,IAJR,SAQkBM,EAAAA,GAAAA,IAAU,sBAAuBJ,GARnD,cAQCK,EARD,yBASEA,EAASC,KAAKC,SAThB,kEAYA,SAAeC,EAAtB,+CAAO,OAAP,oBAAO,WAAiCC,GAAjC,8FAAwCC,EAAxC,+BAAsD,EACrDV,EAAS,CACbC,QAASF,EACTG,OAAQ,CACNC,QAASL,EACTa,KAAMD,EACND,MAAOA,IANN,SAUkBL,EAAAA,GAAAA,IAAU,eAAgBJ,GAV5C,cAUCK,EAVD,yBAWEA,EAASC,KAAKC,SAXhB,mEAcA,SAAeK,EAAtB,+CAAO,OAAP,oBAAO,WAAqChC,GAArC,gFACCoB,EAAS,CACbC,QAASF,EACTG,OAAQ,CACNC,QAASL,IAJR,SAQkBM,EAAAA,GAAAA,IAAA,gBAAmBxB,GAAMoB,GAR3C,cAQCK,EARD,yBASEA,EAASC,MATX,kEAYA,SAAeO,EAAtB,+CAAO,OAAP,oBAAO,WAAqCjC,GAArC,gFACCoB,EAAS,CACbC,QAASF,EACTG,OAAQ,CACNC,QAASL,IAJR,SAQkBM,EAAAA,GAAAA,IAAA,gBAAmBxB,EAAnB,YAAiCoB,GARnD,cAQCK,EARD,yBASEA,EAASC,KAAKQ,MAThB,kEAYA,SAAeC,EAAtB,+CAAO,OAAP,oBAAO,WAAqCnC,GAArC,gFACCoB,EAAS,CACbC,QAASF,EACTG,OAAQ,CACNC,QAASL,IAJR,SAQkBM,EAAAA,GAAAA,IAAA,gBAAmBxB,EAAnB,YAAiCoB,GARnD,cAQCK,EARD,yBASEA,EAASC,KAAKC,SAThB,kEApDPH,EAAAA,GAAAA,SAAAA,QAAyB,+B","sources":["components/MovieList/MovieList.styled.js","components/MovieList/MovieList.jsx","pages/Home/Home.styled.js","pages/Home/Home.jsx","services/moviesAPI.js"],"sourcesContent":["import styled from '@emotion/styled';\nimport { NavLink } from 'react-router-dom';\n\nexport const MovieListContainer = styled.ul``;\n\nexport const MovieItem = styled.li`\n  :not(:last-of-type) {\n    margin-bottom: 5px;\n  }\n`;\n\nexport const MovieLink = styled(NavLink)`\n  display: block;\n  text-decoration: none;\n  color: #466fd5;\n  transform: translate(0);\n  transition: color 500ms ease-in-out, transform 500ms ease-in-out;\n\n  :hover,\n  :focus {\n    color: #06246f;\n    transform: translate(5px);\n  }\n`;\n","import { MovieListContainer, MovieItem, MovieLink } from './MovieList.styled';\nimport PropTypes from 'prop-types';\n\nexport const MovieList = ({ movies, homepage, location }) => {\n  return (\n    <MovieListContainer>\n      {movies.map(({ id, title }) => (\n        <MovieItem key={id}>\n          {homepage ? (\n            <MovieLink to={`movies/${id}`} state={{ from: location }}>\n              {title}\n            </MovieLink>\n          ) : (\n            <MovieLink to={`${id}`} state={{ from: location }}>\n              {title}\n            </MovieLink>\n          )}\n        </MovieItem>\n      ))}\n    </MovieListContainer>\n  );\n};\n\nMovieList.propTypes = {\n  movies: PropTypes.arrayOf(\n    PropTypes.shape({\n      id: PropTypes.number.isRequired,\n      title: PropTypes.string.isRequired,\n    })\n  ),\n};\n","import styled from '@emotion/styled';\n\nexport const Main = styled.main`\n  padding: 20px;\n`;\n","import { useState, useEffect } from 'react';\nimport { useLocation } from 'react-router-dom';\nimport { fetchTrendingMovies } from 'services/moviesAPI';\nimport { toast } from 'react-hot-toast';\nimport { Puff } from 'react-loader-spinner';\n\nimport { Main } from './Home.styled';\n\nimport { MovieList } from 'components/MovieList/MovieList';\n\nconst Home = () => {\n  const [movies, setMovies] = useState([]);\n  const [status, setStatus] = useState('pending');\n  const location = useLocation();\n\n  useEffect(() => {\n    fetchTrendingMovies()\n      .then(movies => {\n        setMovies(movies);\n        setStatus('resolved');\n      })\n      .catch(e => {\n        setStatus('rejected');\n        toast.error(e);\n      });\n  }, []);\n\n  return (\n    <Main>\n      {status === 'pending' && <Puff />}\n\n      {movies.length > 0 && status === 'resolved' && (\n        <MovieList movies={movies} homepage={true} location={location} />\n      )}\n    </Main>\n  );\n};\n\nexport default Home;\n","import axios from 'axios';\n\nconst API_KEY = 'fd7e9d42e4eb94adcf7c367528854213';\nconst BASE_URL = 'https://api.themoviedb.org/3/';\n\naxios.defaults.baseURL = 'https://api.themoviedb.org/3/';\n\nexport async function fetchTrendingMovies() {\n  const config = {\n    baseUrl: BASE_URL,\n    params: {\n      api_key: API_KEY,\n    },\n  };\n\n  const response = await axios.get('trending/movie/week', config);\n  return response.data.results;\n}\n\nexport async function fetchMoviesByName(query, currentPage = 1) {\n  const config = {\n    baseUrl: BASE_URL,\n    params: {\n      api_key: API_KEY,\n      page: currentPage,\n      query: query,\n    },\n  };\n\n  const response = await axios.get('search/movie', config);\n  return response.data.results;\n}\n\nexport async function fetchMovieDetailsById(id) {\n  const config = {\n    baseUrl: BASE_URL,\n    params: {\n      api_key: API_KEY,\n    },\n  };\n\n  const response = await axios.get(`movie/${id}`, config);\n  return response.data;\n}\n\nexport async function fetchMovieCreditsById(id) {\n  const config = {\n    baseUrl: BASE_URL,\n    params: {\n      api_key: API_KEY,\n    },\n  };\n\n  const response = await axios.get(`movie/${id}/credits`, config);\n  return response.data.cast;\n}\n\nexport async function fetchMovieReviewsById(id) {\n  const config = {\n    baseUrl: BASE_URL,\n    params: {\n      api_key: API_KEY,\n    },\n  };\n\n  const response = await axios.get(`movie/${id}/reviews`, config);\n  return response.data.results;\n}\n"],"names":["MovieListContainer","styled","MovieItem","MovieLink","NavLink","MovieList","movies","homepage","location","map","id","title","to","state","from","Main","useState","setMovies","status","setStatus","useLocation","useEffect","fetchTrendingMovies","then","catch","e","toast","length","API_KEY","BASE_URL","config","baseUrl","params","api_key","axios","response","data","results","fetchMoviesByName","query","currentPage","page","fetchMovieDetailsById","fetchMovieCreditsById","cast","fetchMovieReviewsById"],"sourceRoot":""}