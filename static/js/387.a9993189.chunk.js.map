{"version":3,"file":"static/js/387.a9993189.chunk.js","mappings":"uPAEaA,EAAaC,EAAAA,EAAAA,GAAH,yHAQVC,EAAQD,EAAAA,EAAAA,GAAH,2HAQLE,EAAOF,EAAAA,EAAAA,IAAH,sB,SCkBjB,EA/Ba,WACX,OAA4BG,EAAAA,EAAAA,UAAS,IAArC,eAAOC,EAAP,KAAeC,EAAf,KACQC,GAAYC,EAAAA,EAAAA,MAAZD,QAMR,OAJAE,EAAAA,EAAAA,YAAU,YACRC,EAAAA,EAAAA,IAAsBH,GAASI,KAAKL,EACrC,GAAE,CAACC,IAEkB,IAAlBF,EAAOO,QACF,mCAIP,SAACZ,EAAD,UACGK,EAAOQ,KAAI,YAA4C,IAAzCC,EAAwC,EAAxCA,GAAIC,EAAoC,EAApCA,UAAWC,EAAyB,EAAzBA,KAAMC,EAAmB,EAAnBA,aAElC,OACE,UAACf,EAAD,YACE,SAACC,EAAD,CACEe,IAAK,kCAAoCD,EACzCE,IAAKH,KAEP,uBAAIA,KACJ,uBAAID,MANMD,EASf,KAGN,C,kMChCKM,EAAU,mCACVC,EAAW,gCAIV,SAAeC,IAAtB,4CAAO,OAAP,oBAAO,6FACCC,EAAS,CACbC,QAASH,EACTI,OAAQ,CACNC,QAASN,IAJR,SAQkBO,EAAAA,GAAAA,IAAU,sBAAuBJ,GARnD,cAQCK,EARD,yBASEA,EAASC,KAAKC,SAThB,kEAYA,SAAeC,EAAtB,+CAAO,OAAP,oBAAO,WAAiCC,GAAjC,8FAAwCC,EAAxC,+BAAsD,EACrDV,EAAS,CACbC,QAASH,EACTI,OAAQ,CACNC,QAASN,EACTc,KAAMD,EACND,MAAOA,IANN,SAUkBL,EAAAA,GAAAA,IAAU,eAAgBJ,GAV5C,cAUCK,EAVD,yBAWEA,EAASC,KAAKC,SAXhB,mEAcA,SAAeK,EAAtB,+CAAO,OAAP,oBAAO,WAAqCrB,GAArC,gFACCS,EAAS,CACbC,QAASH,EACTI,OAAQ,CACNC,QAASN,IAJR,SAQkBO,EAAAA,GAAAA,IAAA,gBAAmBb,GAAMS,GAR3C,cAQCK,EARD,yBASEA,EAASC,MATX,kEAYA,SAAenB,EAAtB,+CAAO,OAAP,oBAAO,WAAqCI,GAArC,gFACCS,EAAS,CACbC,QAASH,EACTI,OAAQ,CACNC,QAASN,IAJR,SAQkBO,EAAAA,GAAAA,IAAA,gBAAmBb,EAAnB,YAAiCS,GARnD,cAQCK,EARD,yBASEA,EAASC,KAAKO,MAThB,kEAYA,SAAeC,EAAtB,+CAAO,OAAP,oBAAO,WAAqCvB,GAArC,gFACCS,EAAS,CACbC,QAASH,EACTI,OAAQ,CACNC,QAASN,IAJR,SAQkBO,EAAAA,GAAAA,IAAA,gBAAmBb,EAAnB,YAAiCS,GARnD,cAQCK,EARD,yBASEA,EAASC,KAAKC,SAThB,kEApDPH,EAAAA,GAAAA,SAAAA,QAAyB,+B","sources":["components/Cast/Cast.styled.js","components/Cast/Cast.jsx","services/moviesAPI.js"],"sourcesContent":["import styled from '@emotion/styled';\n\nexport const ActorsList = styled.ul`\n  display: flex;\n  align-items: center;\n  flex-wrap: wrap;\n  margin-top: 10px;\n  gap: 10px;\n`;\n\nexport const Actor = styled.li`\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n  width: 100px;\n  gap: 5px;\n`;\n\nexport const Foto = styled.img``;\n","import { useState, useEffect } from 'react';\nimport { useParams } from 'react-router-dom';\nimport { fetchMovieCreditsById } from 'services/moviesAPI';\nimport { ActorsList, Actor, Foto } from './Cast.styled';\n\nconst Cast = () => {\n  const [actors, setActors] = useState([]);\n  const { movieId } = useParams();\n\n  useEffect(() => {\n    fetchMovieCreditsById(movieId).then(setActors);\n  }, [movieId]);\n\n  if (actors.length === 0) {\n    return <div>Cast</div>;\n  }\n\n  return (\n    <ActorsList>\n      {actors.map(({ id, character, name, profile_path }) => {\n        // console.log(profile_path);\n        return (\n          <Actor key={id}>\n            <Foto\n              src={'https://image.tmdb.org/t/p/w500' + profile_path}\n              alt={name}\n            />\n            <p>{name}</p>\n            <p>{character}</p>\n          </Actor>\n        );\n      })}\n    </ActorsList>\n  );\n};\n\nexport default Cast;\n","import axios from 'axios';\n\nconst API_KEY = 'fd7e9d42e4eb94adcf7c367528854213';\nconst BASE_URL = 'https://api.themoviedb.org/3/';\n\naxios.defaults.baseURL = 'https://api.themoviedb.org/3/';\n\nexport async function fetchTrendingMovies() {\n  const config = {\n    baseUrl: BASE_URL,\n    params: {\n      api_key: API_KEY,\n    },\n  };\n\n  const response = await axios.get('trending/movie/week', config);\n  return response.data.results;\n}\n\nexport async function fetchMoviesByName(query, currentPage = 1) {\n  const config = {\n    baseUrl: BASE_URL,\n    params: {\n      api_key: API_KEY,\n      page: currentPage,\n      query: query,\n    },\n  };\n\n  const response = await axios.get('search/movie', config);\n  return response.data.results;\n}\n\nexport async function fetchMovieDetailsById(id) {\n  const config = {\n    baseUrl: BASE_URL,\n    params: {\n      api_key: API_KEY,\n    },\n  };\n\n  const response = await axios.get(`movie/${id}`, config);\n  return response.data;\n}\n\nexport async function fetchMovieCreditsById(id) {\n  const config = {\n    baseUrl: BASE_URL,\n    params: {\n      api_key: API_KEY,\n    },\n  };\n\n  const response = await axios.get(`movie/${id}/credits`, config);\n  return response.data.cast;\n}\n\nexport async function fetchMovieReviewsById(id) {\n  const config = {\n    baseUrl: BASE_URL,\n    params: {\n      api_key: API_KEY,\n    },\n  };\n\n  const response = await axios.get(`movie/${id}/reviews`, config);\n  return response.data.results;\n}\n"],"names":["ActorsList","styled","Actor","Foto","useState","actors","setActors","movieId","useParams","useEffect","fetchMovieCreditsById","then","length","map","id","character","name","profile_path","src","alt","API_KEY","BASE_URL","fetchTrendingMovies","config","baseUrl","params","api_key","axios","response","data","results","fetchMoviesByName","query","currentPage","page","fetchMovieDetailsById","cast","fetchMovieReviewsById"],"sourceRoot":""}